_target_: src.models.MatchingModule

net:
  _target_: src.models.components.nets.new_matcher.NewMatcherNet
  backbone:
    _target_: src.models.components.nets.new_matcher.backbones.create_resnet_selfcoc_fpn_1x
  positional_encoding:
    _target_: src.models.components.nets.new_matcher.SinePositionalEncoding
    depth: 256
  coarse_module:
    _target_: src.models.components.nets.new_matcher.GlobalCoC
    scale: 2
    in_depth: 256
    hidden_depth: 256
    heads_count: 8
    types: ["cross", "cross", "cross", "cross"]
    use_matchability: true
    use_flow: true
    flow_depth: 128
  coarse_matching:
    _target_: src.models.components.nets.new_matcher.CoarseMatching
    type: ???
    sparse: ???
    use_matchability: ${model.net.coarse_module.use_matchability}
    use_flow: ${model.net.coarse_module.use_flow}
    flow_decoder:
      _target_: src.models.components.nets.new_matcher.FlowDecoder
      depth: 128
      radius: 8
  fine_preprocess:
    _target_: src.models.components.nets.new_matcher.FinePreprocess
    type: "crop_fine_only"
    window_size: 16
    stride: 16
    padding: 0
    right_extra: 1
#    scale_before_crop: 2
#    window_size: 5
#    stride: 4
#    padding: 2
#    layer_depths: ${model.net.backbone.layer_depths}
  fine_module:
    _target_: src.models.components.nets.new_matcher.LoFTR
    depth: 64
    heads_count: 8
    attention:
      _target_: src.models.components.nets.new_matcher.FullAttention
    types: ["self", "cross"]
  fine_matching:
    _target_: src.models.components.nets.new_matcher.FineMatching
#    type: "one_stage"
#    reg_window_size: ${model.net.fine_preprocess.window_size}
#    reg_with_std: true
    type: "two_stage"
    cls_window_size: ${model.net.fine_preprocess.window_size}
    cls_depth: 56
    cls_top_k: 1
    reg_window_size: 3
    reg_with_std: false
    reg_temperature: 10.0

loss:
  _target_: src.models.components.losses.NewMatcherLoss
  type: "${model.net.fine_matching.type}"
  first_stage_cls_type: "sparse"
  first_stage_cls_loss_pos_weight: 1.0
  first_stage_cls_loss_neg_weight: 1.0
  second_stage_cls_type: "sparse"
  second_stage_cls_loss_pos_weight: 1.0
  second_stage_cls_loss_neg_weight: 1.0
  reg_loss_weight: 1.0
  use_flow: ${model.net.coarse_module.use_flow}
  flow_loss_weight: 0.05

optimizer: ???

scheduler: ???

train_batch_size_per_gpu: ${data.train_batch_size_per_gpu}

canonical_batch_size: ???

canonical_learning_rate: ???

canonical_warmup_step_count: ???

warmup_ratio: ???

end_point_thresholds: ???

epipolar_thresholds: ???

pose_thresholds: ???
